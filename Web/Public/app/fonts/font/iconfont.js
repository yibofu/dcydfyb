;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-mianshi" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M428.576 920.8 288.672 920.8c-139.104 0-248.928 0-248.928-80.192l0-13.76c0-135.264 111.68-245.312 248.928-245.312l139.872 0c137.248 0 248.928 110.048 248.928 245.312l0 13.76C677.504 920.8 562.112 920.8 428.576 920.8zM288.672 645.568c-101.984 0-184.928 81.344-184.928 181.312l0 13.76c13.376 16.192 116.608 16.192 184.928 16.192l139.872 0c55.36 0 170.56 0 185.76-18.272l-0.8-11.648c0-99.968-82.944-181.312-184.928-181.312L288.672 645.6zM351.616 561.568c-110.24 0-199.936-88.448-199.936-197.152s89.696-197.152 199.936-197.152c110.24 0 199.936 88.448 199.936 197.152S461.888 561.568 351.616 561.568zM351.616 231.264c-74.944 0-135.936 59.712-135.936 133.152s60.992 133.152 135.936 133.152 135.936-59.712 135.936-133.152S426.56 231.264 351.616 231.264z"  ></path>' +
    '' +
    '<path d="M646.848 45.376c-82.592 0-156.896 35.264-209.28 91.328 9.344 5.472 18.272 11.456 26.848 18.016 46.304-47.584 110.944-77.312 182.432-77.312 140.512 0 254.816 114.304 254.816 254.816 0 140.512-114.304 254.816-254.816 254.816-53.44 0-103.04-16.608-144.032-44.832-7.136 8.096-14.752 15.712-22.816 22.848 47.072 33.856 104.608 54.016 166.848 54.016 158.144 0 286.816-128.672 286.816-286.816C933.664 174.016 804.992 45.376 646.848 45.376z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-shipin" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M971.357548 105.606223c0-21.509896-17.429974-38.919405-38.888705-38.919405L91.483062 66.686818c-21.464871 0-38.841633 17.409508-38.841633 38.919405l-0.002047 653.933593c0 21.49864 28.196179 49.488111 49.66105 49.488111l819.399135 0c21.456684 0 49.66105-27.970028 49.66105-49.488111L971.357548 105.606223zM896.868019 734.793202 127.130957 734.793202 127.130957 140.919497l769.738086 0L896.869043 734.793202zM300.889373 957.312158l471.521077 0 0-74.160024L300.889373 883.152135 300.889373 957.312158zM375.535467 289.456485l0 321.638441 322.633095-160.820756L375.535467 289.456485z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-04" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M672.235971 64.055993l-479.940007 0c-74.230721 0-63.992001 36.347457-63.992001 95.988001l0 703.912011c0 79.350081-10.23872 95.988001 63.992001 95.988001l607.924009 0c87.925009 0 95.988001-19.453568 95.988001-95.988001l0-575.928009C761.888764 156.588426 851.605549 222.372203 672.235971 64.055993zM832.215973 831.960005c0 57.976753-2.23972 63.992001-63.992001 63.992001l-511.936008 0c-51.257593 0-63.992001-0.447944-63.992001-63.992001L192.295963 192.039995c0-89.524809-1.023872-63.992001 63.992001-63.992001l383.952006 0c0.447944 82.357705 0 127.984002 0 127.984002 0 66.807649 28.988376 95.988001 95.988001 95.988001l95.988001 0L832.215973 831.960005zM320.279965 512l415.948006 0 0-63.992001-415.948006 0C320.279965 448.007999 320.279965 512 320.279965 512zM320.279965 671.980002l415.948006 0 0-63.992001-415.948006 0C320.279965 607.988001 320.279965 671.980002 320.279965 671.980002z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-tc-hunter" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M534.221606 62.98245c-56.161091 0-101.684914 45.548382-101.684914 101.689007 0 56.178487 45.523823 101.689007 101.684914 101.689007 56.165184 0 101.68082-45.509497 101.68082-101.689007C635.902426 108.530832 590.385766 62.98245 534.221606 62.98245L534.221606 62.98245z"  ></path>' +
    '' +
    '<path d="M772.977361 159.676699c-45.027519 0-81.524758 36.479843-81.524758 81.527828 0 45.00296 36.497239 81.519642 81.524758 81.519642 45.022403 0 81.542154-36.517705 81.542154-81.519642C854.519516 196.157565 817.999764 159.676699 772.977361 159.676699L772.977361 159.676699z"  ></path>' +
    '' +
    '<path d="M382.119419 574.175061 380.775818 599.863117 380.716466 601.055269 397.899824 898.813836 320.026222 898.813836 307.082422 645.023666 274.019399 645.023666 258.023076 898.813836 185.083857 898.813836 196.453812 601.055269 190.807209 480.515938 123.605667 576.592111 91.077833 549.674041 186.234053 339.278193 241.687016 339.278193 294.679951 402.562519 346.212628 339.278193 389.166929 339.278193 409.382343 292.351418 515.8287 292.351418 507.91752 305.829384 518.440178 327.219553 495.535515 490.962871 531.303136 527.362896 531.283694 530.241456 532.686646 528.783245 534.109042 530.241456 534.06811 527.362896 569.857221 490.962871 546.949488 327.219553 557.489542 305.829384 549.565059 292.351418 657.063375 292.351418 671.655721 339.278193 721.154066 339.278193 774.127558 402.562519 825.643861 339.278193 872.932888 339.278193 961.291285 535.350824 926.215418 565.41556 867.270934 465.999316 860.202958 599.863117 860.165096 601.055269 877.3505 898.813836 799.493272 898.813836 786.514679 645.023666 753.469052 645.023666 737.477846 898.813836 664.513044 898.813836 675.901419 601.055269 674.903695 579.895343 644.851239 605.163843 658.448932 961.01755 571.278593 961.01755 552.151977 657.773038 512.661567 657.773038 497.164618 961.01755 404.117432 961.01755 424.663374 605.163843 382.119419 574.175061Z"  ></path>' +
    '' +
    '<path d="M293.527708 159.676699c-45.00603 0-81.527828 36.479843-81.527828 81.527828 0 45.00296 36.521798 81.519642 81.527828 81.519642 45.040822 0 81.520665-36.517705 81.520665-81.519642C375.048373 196.157565 338.568531 159.676699 293.527708 159.676699z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-wodeshenhe" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M101.978 967.627c-41.783-11.25-78.784-46.73-94.149-90.279C1.095 858.262 0.008 901.491 0.008 561.657c0-441.101-1.49-422.016 36.458-465.13C47.604 83.875 67.69 68.119 81.097 61.516l24.375-12.006h751.815l30.51 15.587c23.573 12.051 35.175 22.376 51.083 45.475l20.574 29.888 1.661 73.774c1.913 85.148-0.931 95.073-27.272 95.073-28.431 0-33.55-12.617-33.55-82.698 0-65.585-5.45-80.727-37.671-104.603-14.414-10.682-17.258-10.763-378.119-10.763-355.603 0-363.992 0.229-381.602 10.408-10.66 6.163-22.729 19.719-29.583 33.242L61.74 177.729V844.01l11.575 22.838c20.368 40.184 30.821 43.258 157.106 46.223 118.564 2.783 119.168 2.949 119.33 31.863 0.156 26.971-12.114 29.91-123.245 29.527-63.535-0.221-109.304-2.732-124.528-6.834z" fill="" ></path>' +
    '' +
    '<path d="M959.488 874.627l-64.517-65.004 21.055-31.477c39.165-58.555 54.731-116.414 51.648-191.977-3.446-84.443-30.649-145.306-92.942-207.928-40.868-41.083-75.569-63.125-125.816-79.917-30.93-10.336-40.092-11.403-98.087-11.403-57.999 0-67.162 1.066-98.091 11.403-50.139 16.756-84.953 38.849-125.812 79.84-40.96 41.083-63.219 76.132-79.925 125.828-10.422 31.009-11.474 39.958-11.474 98.091 0 58.137 1.052 67.088 11.474 98.092 16.714 49.738 38.986 84.771 79.925 125.77 41.448 41.498 69.548 59.447 122.562 78.264 35.168 12.48 41.005 13.268 99.204 13.369 56.841 0.096 64.889-0.893 99.473-12.23 21.867-7.162 53.025-22 74.372-35.396l36.732-23.064 62.109 61.578c34.154 33.867 64.979 62.602 68.501 63.846 10.205 3.625 11.061 3.404 22.885-5.891 6.18-4.861 11.236-12.881 11.236-17.816 0.001-5.869-22.363-31.511-64.512-73.978z m-253.22-12.383c-60.558 12.668-117.989 5.041-175.409-23.311-62.126-30.666-109.907-85.053-132.483-150.809-10.519-30.625-11.97-41.08-11.97-86.041 0-62.734 10.33-99.055 41.381-145.48 27.796-41.558 60.273-70.126 105.426-92.729 45.695-22.875 84.848-30.575 136.793-26.905 43.163 3.047 66.773 9.898 107.062 31.073 58.188 30.575 104.554 84.953 126.205 148.001 10.723 31.221 11.941 40.438 11.678 88.178-0.259 47.617-1.573 56.723-12.296 85.295-33.592 89.507-106.922 154.007-196.387 172.728z" fill="" ></path>' +
    '' +
    '<path d="M636.848 806.553c-11.015-7.711-12.788-27.822-3.296-37.316 3.4-3.402 17.281-7.57 30.846-9.264 38.056-4.756 67.1-17.633 92.843-41.164 28.338-25.893 43.6-55.6 51.273-99.781 6.188-35.623 10.326-41.088 29.832-39.373 20.924 1.83 26.561 17.215 20.206 55.182-14.419 86.209-78.585 154.459-161.794 172.092-37.079 7.856-48.257 7.784-59.91-0.376zM466.112 548.607c-11.975-11.152-11.749-16.686 1.761-43.338 20.745-40.937 80.242-92.813 106.591-92.929 12.834-0.059 23.948 14.034 22.305 28.284-1.064 9.204-7.03 15.749-25.497 27.941-24.867 16.427-48.516 42.225-60.699 66.22-11.687 23.026-28.856 28.363-44.461 13.822z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)